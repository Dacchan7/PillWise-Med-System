// Code generated by Arduino IoT Cloud, DO NOT EDIT.

#include <ArduinoIoTCloud.h>
#include <Arduino_ConnectionHandler.h>

const char DEVICE_LOGIN_NAME[]  = "9aa8b032-54bc-45c2-8f8c-8f8d94436f3f";

const char SSID[]               = SECRET_SSID;    // Network SSID (name)
const char PASS[]               = SECRET_OPTIONAL_PASS;    // Network password (use for WPA, or use as key for WEP)
const char DEVICE_KEY[]  = SECRET_DEVICE_KEY;    // Secret device password

void onAdherencePercentChange();
void onPillsToDispenseCont1Change();
void onPillsToDispenseCont2Change();
void onReceivedDosesChange();
void onSkippedDosesChange();
void onTotalDosesChange();
void onDoseScheduleChange();
void onDispenseButtonChange();
void onDispensingActiveChange();
void onIsPillDispensingEnableChange();
void onNotReceivedChange();

float adherencePercent;
int pillsToDispenseCont1;
int pillsToDispenseCont2;
int receivedDoses;
int skippedDoses;
int totalDoses;
CloudSchedule doseSchedule;
bool dispenseButton;
bool dispensingActive;
bool isPillDispensingEnable;
bool notReceived;

void initProperties(){

  ArduinoCloud.setBoardId(DEVICE_LOGIN_NAME);
  ArduinoCloud.setSecretDeviceKey(DEVICE_KEY);
  ArduinoCloud.addProperty(adherencePercent, READWRITE, ON_CHANGE, onAdherencePercentChange);
  ArduinoCloud.addProperty(pillsToDispenseCont1, READWRITE, ON_CHANGE, onPillsToDispenseCont1Change);
  ArduinoCloud.addProperty(pillsToDispenseCont2, READWRITE, ON_CHANGE, onPillsToDispenseCont2Change);
  ArduinoCloud.addProperty(receivedDoses, READWRITE, ON_CHANGE, onReceivedDosesChange);
  ArduinoCloud.addProperty(skippedDoses, READWRITE, ON_CHANGE, onSkippedDosesChange);
  ArduinoCloud.addProperty(totalDoses, READWRITE, ON_CHANGE, onTotalDosesChange);
  ArduinoCloud.addProperty(doseSchedule, READWRITE, ON_CHANGE, onDoseScheduleChange);
  ArduinoCloud.addProperty(dispenseButton, READWRITE, ON_CHANGE, onDispenseButtonChange);
  ArduinoCloud.addProperty(dispensingActive, READWRITE, ON_CHANGE, onDispensingActiveChange);
  ArduinoCloud.addProperty(isPillDispensingEnable, READWRITE, ON_CHANGE, onIsPillDispensingEnableChange);
  ArduinoCloud.addProperty(notReceived, READWRITE, ON_CHANGE, onNotReceivedChange);

}

WiFiConnectionHandler ArduinoIoTPreferredConnection(SSID, PASS);
